// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")  // Required for Neon
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  name          String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  subscription  Subscription?
  adReports     AdReport[]
  scrapingJobs  ScrapingJob[]
}

model AdReport {
  id          String      @id @default(uuid())
  platform    String      // Meta, Google, TikTok
  adContent   Json
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  scrapingJob ScrapingJob @relation(fields: [jobId], references: [id])
  jobId       String
}

enum SubscriptionPlan {
  Basic
  Pro
  Business
}

model Subscription {
  id              String           @id @default(uuid())
  plan            SubscriptionPlan @default(Basic)
  status          String           @default("active")
  startDate       DateTime         @default(now())
  endDate         DateTime         @default(now())
  requestLimit    Int              @default(10)  // Monthly request limit
  dataPointLimit  Int              @default(10)  // Max data points per request
  requestCount    Int              @default(0)   // Current month's request count
  lastResetDate   DateTime         @default(now()) // For monthly reset
  user            User?            @relation(fields: [userId], references: [id])
  userId          String?          @unique
}

model ScrapingJob {
  id        String     @id @default(uuid())
  status    String     // pending, running, completed, failed
  platform  String     // Meta, Google, TikTok
  config    Json
  startTime DateTime?
  endTime   DateTime?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    String
  user      User       @relation(fields: [userId], references: [id])
  adReports AdReport[]
}

// npx prisma generate
// npx prisma db push